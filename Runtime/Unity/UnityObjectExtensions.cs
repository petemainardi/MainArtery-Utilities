using UnityEngine;

namespace MainArtery.Utilities.Unity
{
    /// ===========================================================================================
    /// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    /// ===========================================================================================
    /**
     *  Extension methods related to UnityObjects and/or derived types thereof.
     */
    /// ===========================================================================================
    /// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    /// ===========================================================================================
    public static class UnityObjectExtensions
    {
        public static string NameAndID(this Object obj)
        {
            return $"{obj.name}:{obj.GetInstanceID().ToString()}";
        }
    }
    /// ===========================================================================================
    /// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    /// ===========================================================================================
    public static class GameObjectExtensions
    {
        // Whether this gameobject is a scene-instance or a prefab
        public static bool IsPrefab(this GameObject gObj)
        {
            return gObj.scene.rootCount == 0;    // return obj.scene.name == null; would also work
        }
    }
    /// ===========================================================================================
    /// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    /// ===========================================================================================
    public static class TransformExtensions
    {
        public static string Path(this Transform t)
        {
            return t.parent == null
                ? t.name
                : $"{t.parent.Path()}/{t.name}";
        }
    }
    /// ===========================================================================================
    /// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    /// ===========================================================================================
    public static class ComponentExtensions
    {
        public static string Path(this Component component)
        {
            return component.transform.Path() + "/" + component.GetType().ToString();
        }
    }
    /// ===========================================================================================
    /// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    /// ===========================================================================================
}